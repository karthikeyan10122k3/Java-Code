package com.kar.practice.exercise.DataStructure.src.Recursion.Array;

import java.util.Scanner;

//  Problem statement
//  A thief wants to loot houses. He knows the amount of money in each house. He cannot loot two consecutive houses. Find the maximum amount of money he can loot.
//
//        Constraints :
//        0 <= n <= 10 ^ 4
//
//  Time Limit: 1 sec
//  Sample Input 1 :
//        6
//        5 5 10 100 10 5
//  Sample Output 1 :
//        110
//  Sample Input 2 :
//        6
//        10 2 30 20 3 50
//  Sample Output 2 :
//        90
//  Explanation of Sample Output 2 :
//        Looting first, third, and the last houses([10 + 30 + 50]) will result in the maximum loot, and all the other possible combinations would result in less than 90.

public class LootHouses {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter no of Houses: ");
        int length = sc.nextInt();
        int[] inputArray = new int[length];
        System.out.println("Enter the Loots of Each House: ");
        for (int i = 0; i < length; i++) {
            inputArray[i] = sc.nextInt();
        }

//        int[] inputArray = {9882, 9927, 2398, 2771, 4833, 7583, 4592, 7158, 2875, 4389, 2378, 5170, 4863, 1677, 3133, 9249, 8997, 3163, 7643, 9910, 3909, 1552, 6569, 4994, 8351, 5827, 6037, 7360, 1209, 3201, 7112, 9518, 8506, 4868, 2593, 6740, 786, 6330, 3431, 8250, 3389, 3252, 9994, 1856, 9369, 6180, 2986, 3768, 5872, 4614, 9172, 2875, 4473, 6706, 2738, 2161, 6693, 3077, 7794, 9372, 1451, 2496, 1133, 3848, 7305, 8623, 759, 965, 7275, 3872, 917, 9610, 2725, 7402, 4193, 5538, 2250, 3948, 5565, 3241, 3029, 7343, 5395, 5037, 2712, 8573, 513, 6100, 5717, 1799, 1822, 7292, 9054, 2820, 8319, 2731, 416, 2068, 9730, 3489, 1861, 730, 1843, 124, 884, 333, 4838, 207, 9776, 8109, 2716, 3921, 5609, 6625, 1001, 2497, 8270, 8574, 4394, 6808, 9285, 2791, 6337, 5791, 9323, 9224, 9955, 7767, 40, 7217, 3407, 4251, 3980, 3154, 1453, 2493, 3370, 6519, 1883, 13, 8493, 7249, 6746, 5227, 1209, 8171, 5220, 3550, 1895, 8785, 2394, 1897, 4288, 543, 5307, 9740, 3885, 6180, 9677, 8936, 447, 5977, 2420, 2986, 6545, 9926, 1193, 5929, 9877, 473, 2112, 4459, 3791, 2537, 2605, 9659, 9469, 3602, 2165, 3807, 7595, 7210, 6784, 5651, 8376, 8732, 3074, 498, 1675, 9652, 5394, 5784, 1223, 2686, 8806, 2897, 4198, 6702, 4106, 9785, 7022, 4195, 8638, 2304, 1152, 88, 3642, 3482, 5632, 2273, 6089, 2567, 6016, 3758, 4538, 2260, 4115, 2982, 3697, 1163, 2268, 6894, 6790, 4482, 3752, 9509, 3774, 7847, 9245, 1593, 7063, 4404, 133, 4896, 204, 3934, 2332, 9508, 8246, 4556, 5296, 2715, 4916, 9326, 3472, 7294, 8827, 6108, 6724, 8140, 6520, 7057, 9081, 3841, 6532, 1415, 5749, 5902, 4057, 6928, 6067, 6506, 4140, 5082, 1977, 4322, 1840, 8088, 4559, 5812, 3952, 3001, 3383, 1249, 7930, 4925, 2915, 1834, 4507, 620, 7276, 7297, 6869, 5430, 6220, 9575, 4923, 1806, 1418, 3606, 4348, 2995, 8470, 5021, 7033, 5348, 5351, 702, 8106, 8075, 6633, 2728, 1918, 8066, 7483, 2888, 9338, 3831, 166, 1625, 2306, 7531, 2749, 2235, 9364, 9143, 9036, 8567, 5234, 6493, 3424, 1832, 1454, 9334, 2018, 9921, 6938, 9340, 6739, 4527, 3496, 4410, 3920, 6592, 3604, 1501, 2327, 4320, 9677, 5160, 1931, 317, 4399, 1536, 8106, 5558, 1291, 338, 5580, 8730, 3629, 4552, 6012, 8176, 4622, 8667, 8594, 3723, 8860, 9235, 2927, 2888, 5138, 5094, 5773, 2371, 3352, 2473, 6879, 1188, 3386, 4480, 9422, 2767, 6147, 5953, 2562, 553, 1872, 9069, 543, 3441, 165, 114, 115, 3736, 1495, 3806, 8936, 3918, 5902, 9920, 9294, 4836, 2896, 8424, 2230, 129, 2457, 9893, 9271, 3252, 540, 1511, 1784, 9428, 3826, 6737, 8327, 2484, 193, 9516, 620, 9897, 6336, 1232, 6424, 5596, 5377, 8343, 4099, 9372, 3902, 7326, 8883, 4591, 4807, 6142, 9137, 9116, 6174, 1908, 1818, 2458, 7096, 5066, 8139, 1735, 8909, 3847, 2924, 2079, 3088, 3097, 5657, 8697, 7678, 210, 4226, 5080, 2922, 4302, 515, 8357, 8924, 9810, 5888, 9911, 1084, 5648, 7361, 903, 1771, 2004, 3673, 9322, 1164, 6471, 3224, 1681, 4382, 6265, 9471, 7556, 6000, 1642, 7228, 3927, 5689, 5147, 9558, 6937, 3661, 214, 2934, 5653, 4688, 9367, 8141, 1268, 7687, 4539, 3146, 6226, 3208, 5797, 7246, 5450, 8422, 124, 947, 9943, 6797, 6165, 2961, 5788, 8712, 9145, 152, 5523, 7495, 4349, 2243, 9615, 3292, 9799, 7522, 3262, 7711, 529, 7574, 2488, 6723, 1198, 4663, 542, 2677, 9509, 627, 1314, 830, 1134, 4396, 4918, 5593, 7830, 5909, 9401, 5545, 4166, 2397, 6572, 687, 6454, 8406, 4357, 4243, 8753, 3838, 5104, 3191, 3767, 220, 4783, 634, 9277, 2802, 7232, 946, 8765, 6717, 6049, 3037, 9803, 89, 1206, 3086, 5688, 9210, 7393, 4137, 4007, 4795, 9099, 8817, 4014, 3573, 7550, 6327, 1571, 3453, 7715, 2992, 9701, 1031, 5075, 3745, 1843, 3821, 3143, 5498, 3960, 7864, 8538, 8405, 7105, 9091, 227, 6940, 645, 1509, 2859, 4944, 4711, 6993, 3763, 3484, 1714, 7685, 7971, 6582, 4937, 3832, 2992, 9683, 4873, 4159, 2900, 3462, 586, 1250, 2141, 44, 8582, 5222, 4940, 3726, 9589, 920, 5689, 1995, 5570, 4498, 1297, 1814, 2902, 1047, 9137, 2811, 6117, 1493, 178, 8877, 1653, 8830, 656, 6289, 5087, 737, 8194, 1324, 4378, 3795, 3992, 7405, 3529, 5774, 7503, 9024, 9682, 1246, 6892, 9411, 7839, 9137, 386, 2852, 5445, 4311, 2187, 8693, 4133, 9063, 5769, 5397, 4578, 6885, 4576, 8008, 4547, 761, 7970, 7100, 7899, 5522, 7317, 8067, 4116, 6484, 7052, 2451, 1140, 3137, 6705, 2345, 4299, 9572, 4088, 2369, 7350, 5741, 31, 4366, 4676, 4782, 557, 5966, 2633, 5057, 7186, 5533, 434, 3577, 5717, 3853, 8134, 183, 1224, 7147, 4863, 8616, 1047, 1670, 2420, 6730, 6659, 6157, 8245, 2049, 396, 9409, 8303, 1312, 8068, 5053, 2357, 9377, 795, 2669, 9051, 3491, 7762, 2812, 9569, 9370, 585, 8235, 1298, 6107, 9026, 7386, 1971, 562, 3239, 955, 3404, 2962, 2947, 7505, 6390, 2397, 6541, 5708, 9088, 6863, 1390, 997, 9968, 6817, 4019, 5564, 7674, 9048, 1757, 5761, 3636, 8046, 8168, 1447, 5915, 5226, 5726, 1255, 4719, 4818, 4113, 8845, 94, 8159, 6281, 8726, 9711, 653, 6877, 14, 1560, 8863, 8274, 387, 573, 5990, 1845, 140, 5591, 505, 3577, 6152, 9386, 8780, 8324, 8423, 2228, 1041, 6725, 8591, 4802, 7720, 2638, 3385, 225, 4161, 839, 3703, 4951, 4599, 9337, 3965, 3054, 868, 6902, 5983, 1294, 2373, 3419, 8411, 5635, 8271, 381, 3510, 2462, 906, 4801, 6079, 4486, 5545, 8768, 5056, 7615, 5970, 2844, 4913, 6912, 2691, 1845, 2303, 2562, 3715, 6580, 7039, 9254, 5273, 6869, 3928, 966, 1068, 5438, 2455, 1618, 5131, 5779, 1478, 8880, 1439, 8167, 8105, 6844, 902, 2390, 6990, 6279, 6888, 5110, 1727, 2806, 5789, 865, 6041, 3131, 8604, 108, 9579, 3686, 614, 4873, 8128, 2324, 1082, 7928, 8150, 8855, 8486, 2187, 9064, 8382, 4600, 1741, 8391, 8302, 7004, 2657, 7501, 3487, 5961, 4896, 2637, 2388, 3857, 5894, 7816, 2249, 5868, 3178, 121, 2496, 6749, 441, 253, 6639, 9666, 2668, 9574, 7022, 522, 5766, 7889, 4083, 4068, 8184, 2345, 9998, 975, 768, 3442, 578, 3202, 6961, 9552, 3498, 3421, 4883, 2213, 7833, 9447, 9730, 7780, 1210, 5738, 5548, 1268, 2371, 4040, 2708, 8213, 10, 7636, 7910, 7179, 4985, 1809, 3669, 57, 5876, 8831, 520, 7682, 7089, 9443, 6123, 5167, 5922, 6323, 7129, 5167, 1199, 1368, 3980, 6266, 7009, 9925, 5358, 2631, 2359, 5036, 260, 319, 2766, 2025, 7022, 3430, 1926 };

        int finalMax = lootHouses(inputArray,0);

        System.out.println("Max Loot = "+ finalMax);

    }

    private static int lootHouses(int[] inputArray, int index) {

        if (index >= inputArray.length) {
            return 0;
        }

        int ifSkipHouse = lootHouses(inputArray, index + 1);

        int ifLootHouse = inputArray[index] + lootHouses(inputArray, index + 2);

        return Math.max(ifSkipHouse, ifLootHouse);
    }
}
